{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "hw2-mongodb",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "API for a notebook application using MongoDB"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://backend-taskpro.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "auth",
      "description": "Operations with user."
    },
    {
      "name": "boards",
      "description": "Operations with boards."
    },
    {
      "name": "columns",
      "description": "Operations with columns."
    },
    {
      "name": "cards",
      "description": "Operations with cards."
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Create User",
        "operationId": "createUser",
        "description": "Create a user with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "description": "User's name",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "example@mail.com"
                  },
                  "password": {
                    "description": "User's password, must have uppercase and lowercase letters, as well as special characters",
                    "type": "string",
                    "example": "Qweas23!"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered a user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "$ref": "#/components/responses/409"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login User",
        "operationId": "LoginUser",
        "description": "Login a user with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "example@mail.com"
                  },
                  "password": {
                    "description": "User's password, must have uppercase and lowercase letters, as well as special characters",
                    "type": "string",
                    "example": "Qweas23!"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Logined a user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered a user!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "65e4decdd286b30065d54af9"
                        },
                        "name": {
                          "type": "string",
                          "example": "John Doe"
                        },
                        "photo": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/dnfxykh8j/image/upload/v1730411910/wf6g1bi1qvd7spmurqi3.png"
                        },
                        "email": {
                          "type": "string",
                          "example": "mail@example.com"
                        },
                        "theme": {
                          "type": "string",
                          "example": "light"
                        },
                        "accessToken": {
                          "type": "string",
                          "example": "QgJWR3Nul5Yskifrbwk1tg=="
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "logout User",
        "operationId": "logoutUser",
        "description": "logout a user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": null,
        "responses": {
          "204": {
            "description": "logout a user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 204
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Refresh User",
        "operationId": "RefreshUser",
        "description": "Refresh a user. Attention, the request must be authorized!!!!!",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": null,
        "responses": {
          "200": {
            "description": "Refreshed a user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully is refreshed!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "gocx91Da6+mfdrgJlCn5qQ=="
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/user": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Get User",
        "operationId": "GetUser",
        "description": "Get a user data. Attention, the request must be authorized!!!!!",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": null,
        "responses": {
          "200": {
            "description": "Geted a user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found user!"
                    },
                    "data": {
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "6723826b869a988a57ad865c"
                        },
                        "name": {
                          "type": "string",
                          "example": "Copanda2"
                        },
                        "photo": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/dnfxykh8j/image/upload/v1730388143/xsowbnzqjbr09b1cbvmy.jpg"
                        },
                        "email": {
                          "type": "string",
                          "example": "panda@mail.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "patch": {
        "tags": [
          "auth"
        ],
        "summary": "Partially update a user",
        "operationId": "patchUser",
        "description": "Partially updates a user's information.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "User's name",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "example@mail.com"
                  },
                  "password": {
                    "description": "User's password, must have uppercase and lowercase letters, as well as special characters",
                    "type": "string",
                    "example": "Qweas23!"
                  },
                  "photo": {
                    "description": "User's photo",
                    "type": "string",
                    "format": "binary"
                  },
                  "theme": {
                    "description": "site theme type (dark, light, violet)",
                    "type": "string",
                    "enum": [
                      "dark",
                      "light",
                      "violet"
                    ],
                    "default": "light",
                    "example": "light"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated the user.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/boards": {
      "get": {
        "tags": [
          "boards"
        ],
        "summary": "Get boards",
        "operationId": "GetBoards",
        "description": "Get a boards data.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found boards!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found boards!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "example": {
                          "type": "object",
                          "required": [
                            "title",
                            "background",
                            "icon"
                          ],
                          "properties": {
                            "_id": {
                              "description": "board id",
                              "type": "string",
                              "example": "65e4decdd286b30065d54af9"
                            },
                            "title": {
                              "description": "Board's title",
                              "type": "string",
                              "example": "Create MagazinePro"
                            },
                            "background": {
                              "description": "Board's background",
                              "type": "string",
                              "default": "bg-1",
                              "example": "bg-1"
                            },
                            "icon": {
                              "description": "Board's icon",
                              "type": "string",
                              "default": "icon-1",
                              "example": "icon-1"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "post": {
        "tags": [
          "boards"
        ],
        "summary": "Create board",
        "operationId": "createBoard",
        "description": "Create a board with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "background",
                  "icon"
                ],
                "properties": {
                  "title": {
                    "description": "Board's title",
                    "type": "string",
                    "example": "TO DO"
                  },
                  "background": {
                    "description": "Board's background",
                    "type": "string",
                    "enum": [
                      "bg-1",
                      "bg-2",
                      "bg-3",
                      "bg-4",
                      "bg-5",
                      "bg-6",
                      "bg-7",
                      "bg-8",
                      "bg-9",
                      "bg-10",
                      "bg-11",
                      "bg-12",
                      "bg-13",
                      "bg-14",
                      "bg-15",
                      "bg-16"
                    ],
                    "example": "bg-1"
                  },
                  "icon": {
                    "description": "Board's icon",
                    "enum": [
                      "icon-1",
                      "icon-2",
                      "icon-3",
                      "icon-4",
                      "icon-5",
                      "icon-6",
                      "icon-7",
                      "icon-8"
                    ],
                    "type": "string",
                    "example": "icon-8"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a board",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a board!"
                    },
                    "data": {
                      "type": "object",
                      "example": {
                        "type": "object",
                        "required": [
                          "title",
                          "background",
                          "icon"
                        ],
                        "properties": {
                          "_id": {
                            "description": "board id",
                            "type": "string",
                            "example": "65e4decdd286b30065d54af9"
                          },
                          "title": {
                            "description": "Board's title",
                            "type": "string",
                            "example": "Create MagazinePro"
                          },
                          "background": {
                            "description": "Board's background",
                            "type": "string",
                            "default": "bg-1",
                            "example": "bg-1"
                          },
                          "icon": {
                            "description": "Board's icon",
                            "type": "string",
                            "default": "icon-1",
                            "example": "icon-1"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/boards/:boardId": {
      "get": {
        "tags": [
          "boards"
        ],
        "summary": "Get board by id",
        "operationId": "GetBoard",
        "description": "Get a board data.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get board by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found board!"
                    },
                    "data": {
                      "type": "object",
                      "example": {
                        "type": "object",
                        "required": [
                          "title",
                          "background",
                          "icon"
                        ],
                        "properties": {
                          "_id": {
                            "description": "board id",
                            "type": "string",
                            "example": "65e4decdd286b30065d54af9"
                          },
                          "title": {
                            "description": "Board's title",
                            "type": "string",
                            "example": "Create MagazinePro"
                          },
                          "background": {
                            "description": "Board's background",
                            "type": "string",
                            "default": "bg-1",
                            "example": "bg-1"
                          },
                          "icon": {
                            "description": "Board's icon",
                            "type": "string",
                            "default": "icon-1",
                            "example": "icon-1"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "patch": {
        "tags": [
          "boards"
        ],
        "summary": "Update board by id",
        "operationId": "updateBoard",
        "description": "Update a board by id.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "672a8db61a46f387714eac47"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "description": "Board title",
                    "type": "string",
                    "example": "Eddy Canter Din"
                  },
                  "icon": {
                    "description": "Board icon",
                    "type": "string",
                    "enum": [
                      "icon-1",
                      "icon-2",
                      "icon-3",
                      "icon-4",
                      "icon-5",
                      "icon-6",
                      "icon-7",
                      "icon-8"
                    ],
                    "example": "icon-1"
                  },
                  "background": {
                    "description": "Board background",
                    "type": "string",
                    "enum": [
                      "bg-1",
                      "bg-2",
                      "bg-3",
                      "bg-4",
                      "bg-5",
                      "bg-6",
                      "bg-7",
                      "bg-8",
                      "bg-9",
                      "bg-10",
                      "bg-11",
                      "bg-12",
                      "bg-13",
                      "bg-14",
                      "bg-15",
                      "bg-16"
                    ],
                    "example": "bg-16"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch Board by id and body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated a Board!"
                    },
                    "data": {
                      "type": "object",
                      "example": {
                        "type": "object",
                        "required": [
                          "title",
                          "background",
                          "icon"
                        ],
                        "properties": {
                          "_id": {
                            "description": "board id",
                            "type": "string",
                            "example": "65e4decdd286b30065d54af9"
                          },
                          "title": {
                            "description": "Board's title",
                            "type": "string",
                            "example": "Create MagazinePro"
                          },
                          "background": {
                            "description": "Board's background",
                            "type": "string",
                            "default": "bg-1",
                            "example": "bg-1"
                          },
                          "icon": {
                            "description": "Board's icon",
                            "type": "string",
                            "default": "icon-1",
                            "example": "icon-1"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "delete": {
        "tags": [
          "boards"
        ],
        "summary": "Delete board by id",
        "operationId": "DeleteBoard",
        "description": "Delete a board by id.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/columns/:boardId": {
      "get": {
        "tags": [
          "columns"
        ],
        "summary": "Get list of columns",
        "operationId": "GetColumns",
        "description": "Get list of columns with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "boardId": {
                    "description": "boardId",
                    "type": "string",
                    "example": "65ca67e7ae7f10c88b598384"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully found columns!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found columns!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "example": {
                          "type": "object",
                          "required": [
                            "title"
                          ],
                          "properties": {
                            "_id": {
                              "description": "Column id",
                              "type": "string",
                              "example": "67280ec83bdc839326b08e1b"
                            },
                            "boardId": {
                              "description": "Board id",
                              "type": "string",
                              "example": "67280e853bdc839326b08e0f"
                            },
                            "title": {
                              "description": "Column's title",
                              "type": "string",
                              "example": "Materials"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "post": {
        "tags": [
          "columns"
        ],
        "summary": "Post column",
        "operationId": "PostColumn",
        "description": "create a column.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "title"
                ],
                "properties": {
                  "title": {
                    "description": "Column title",
                    "type": "string",
                    "example": "TO DO"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create a column",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found Column!"
                    },
                    "data": {
                      "type": "object",
                      "example": {
                        "type": "object",
                        "required": [
                          "title"
                        ],
                        "properties": {
                          "_id": {
                            "description": "Column id",
                            "type": "string",
                            "example": "67280ec83bdc839326b08e1b"
                          },
                          "boardId": {
                            "description": "Board id",
                            "type": "string",
                            "example": "67280e853bdc839326b08e0f"
                          },
                          "title": {
                            "description": "Column's title",
                            "type": "string",
                            "example": "Materials"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/columns/:columnId": {
      "get": {
        "tags": [
          "columns"
        ],
        "summary": "Get columns by id",
        "operationId": "GetColumn",
        "description": "Get a column data.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "columnId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "672a8db61a46f387714eac47"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get column by columnId",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found Column!"
                    },
                    "data": {
                      "type": "object",
                      "example": {
                        "type": "object",
                        "required": [
                          "title"
                        ],
                        "properties": {
                          "_id": {
                            "description": "Column id",
                            "type": "string",
                            "example": "67280ec83bdc839326b08e1b"
                          },
                          "boardId": {
                            "description": "Board id",
                            "type": "string",
                            "example": "67280e853bdc839326b08e0f"
                          },
                          "title": {
                            "description": "Column's title",
                            "type": "string",
                            "example": "Materials"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "patch": {
        "tags": [
          "columns"
        ],
        "summary": "Update column by id",
        "operationId": "updateColumn",
        "description": "Update a column by id.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "columnId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6727ba623af6846ad7c7abe6"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "description": "Column title",
                    "type": "string",
                    "example": "Eddy Canter Din"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch Column by id and body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated a Column!"
                    },
                    "data": {
                      "type": "object",
                      "example": {
                        "type": "object",
                        "required": [
                          "title"
                        ],
                        "properties": {
                          "_id": {
                            "description": "Column id",
                            "type": "string",
                            "example": "67280ec83bdc839326b08e1b"
                          },
                          "boardId": {
                            "description": "Board id",
                            "type": "string",
                            "example": "67280e853bdc839326b08e0f"
                          },
                          "title": {
                            "description": "Column's title",
                            "type": "string",
                            "example": "Materials"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "delete": {
        "tags": [
          "columns"
        ],
        "summary": "Delete column by id",
        "operationId": "DeleteColumn",
        "description": "Delete a column by id.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "columnId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/cards/:columnId": {
      "get": {
        "tags": [
          "cards"
        ],
        "summary": "Get list of cards",
        "operationId": "GetCards",
        "description": "Get list of cards with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "columnId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found cards!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found cards!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "example": {
                          "type": "object",
                          "required": [
                            "title",
                            "description",
                            "priority",
                            "date"
                          ],
                          "properties": {
                            "_id": {
                              "description": "Card id",
                              "type": "string",
                              "example": "67280fd53bdc839326b08e78"
                            },
                            "columnId": {
                              "description": "Card columnId",
                              "type": "string",
                              "example": "67280ee53bdc839326b08e24"
                            },
                            "boardId": {
                              "description": "Card boardId",
                              "type": "string",
                              "example": "67280e853bdc839326b08e0f"
                            },
                            "title": {
                              "description": "Card title",
                              "type": "string",
                              "example": "Materials"
                            },
                            "description": {
                              "description": "Card description",
                              "type": "string",
                              "example": "Link of materials http://materials.link.com"
                            },
                            "priority": {
                              "description": "Card priority",
                              "type": "string",
                              "enum": [
                                "low",
                                "medium",
                                "high",
                                "without"
                              ],
                              "example": "without"
                            },
                            "date": {
                              "description": "Card date",
                              "type": "string",
                              "example": "2024-10-12T05:46:48.395Z"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "post": {
        "tags": [
          "cards"
        ],
        "summary": "Post card",
        "operationId": "createCard",
        "description": "create a card.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "columnId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "description",
                  "priority",
                  "date"
                ],
                "properties": {
                  "title": {
                    "description": "Column title",
                    "type": "string",
                    "example": "Task#1"
                  },
                  "description": {
                    "description": "Column title",
                    "type": "string",
                    "example": "Task#1 - fill list task"
                  },
                  "priority": {
                    "type": "string",
                    "enum": [
                      "low",
                      "medium",
                      "hight"
                    ],
                    "example": "low"
                  },
                  "date": {
                    "type": "string",
                    "example": "2024-11-06T14:33:38.468Z"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create a card",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found Column!"
                    },
                    "data": {
                      "type": "string",
                      "example": {
                        "type": "object",
                        "required": [
                          "title",
                          "description",
                          "priority",
                          "date"
                        ],
                        "properties": {
                          "_id": {
                            "description": "Card id",
                            "type": "string",
                            "example": "67280fd53bdc839326b08e78"
                          },
                          "columnId": {
                            "description": "Card columnId",
                            "type": "string",
                            "example": "67280ee53bdc839326b08e24"
                          },
                          "boardId": {
                            "description": "Card boardId",
                            "type": "string",
                            "example": "67280e853bdc839326b08e0f"
                          },
                          "title": {
                            "description": "Card title",
                            "type": "string",
                            "example": "Materials"
                          },
                          "description": {
                            "description": "Card description",
                            "type": "string",
                            "example": "Link of materials http://materials.link.com"
                          },
                          "priority": {
                            "description": "Card priority",
                            "type": "string",
                            "enum": [
                              "low",
                              "medium",
                              "high",
                              "without"
                            ],
                            "example": "without"
                          },
                          "date": {
                            "description": "Card date",
                            "type": "string",
                            "example": "2024-10-12T05:46:48.395Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/cards/:cardId": {
      "get": {
        "tags": [
          "cards"
        ],
        "summary": "Get card by id",
        "operationId": "getCard",
        "description": "Get a card data.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cardId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "672a8db61a46f387714eac47"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get card by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found Column!"
                    },
                    "data": {
                      "type": "object",
                      "example": {
                        "type": "object",
                        "required": [
                          "title",
                          "description",
                          "priority",
                          "date"
                        ],
                        "properties": {
                          "_id": {
                            "description": "Card id",
                            "type": "string",
                            "example": "67280fd53bdc839326b08e78"
                          },
                          "columnId": {
                            "description": "Card columnId",
                            "type": "string",
                            "example": "67280ee53bdc839326b08e24"
                          },
                          "boardId": {
                            "description": "Card boardId",
                            "type": "string",
                            "example": "67280e853bdc839326b08e0f"
                          },
                          "title": {
                            "description": "Card title",
                            "type": "string",
                            "example": "Materials"
                          },
                          "description": {
                            "description": "Card description",
                            "type": "string",
                            "example": "Link of materials http://materials.link.com"
                          },
                          "priority": {
                            "description": "Card priority",
                            "type": "string",
                            "enum": [
                              "low",
                              "medium",
                              "high",
                              "without"
                            ],
                            "example": "without"
                          },
                          "date": {
                            "description": "Card date",
                            "type": "string",
                            "example": "2024-10-12T05:46:48.395Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "cards"
        ],
        "summary": "Update card by id",
        "operationId": "updateCard",
        "description": "Update a card data.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cardId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "672a8db61a46f387714eac47"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update card by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully update Card!"
                    },
                    "data": {
                      "type": "object",
                      "example": {
                        "type": "object",
                        "required": [
                          "title",
                          "description",
                          "priority",
                          "date"
                        ],
                        "properties": {
                          "_id": {
                            "description": "Card id",
                            "type": "string",
                            "example": "67280fd53bdc839326b08e78"
                          },
                          "columnId": {
                            "description": "Card columnId",
                            "type": "string",
                            "example": "67280ee53bdc839326b08e24"
                          },
                          "boardId": {
                            "description": "Card boardId",
                            "type": "string",
                            "example": "67280e853bdc839326b08e0f"
                          },
                          "title": {
                            "description": "Card title",
                            "type": "string",
                            "example": "Materials"
                          },
                          "description": {
                            "description": "Card description",
                            "type": "string",
                            "example": "Link of materials http://materials.link.com"
                          },
                          "priority": {
                            "description": "Card priority",
                            "type": "string",
                            "enum": [
                              "low",
                              "medium",
                              "high",
                              "without"
                            ],
                            "example": "without"
                          },
                          "date": {
                            "description": "Card date",
                            "type": "string",
                            "example": "2024-10-12T05:46:48.395Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "cards"
        ],
        "summary": "Delete card by id",
        "operationId": "deleteCard",
        "description": "Delete a card by id.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cardId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "properties": {
          "_id": {
            "description": "User id",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "name": {
            "description": "User's name",
            "type": "string",
            "example": "John Doe"
          },
          "photo": {
            "description": "Link to Contact's photo",
            "type": "string",
            "default": "https://res.cloudinary.com/dnfxykh8j/image/upload/v1730411910/wf6g1bi1qvd7spmurqi3.png",
            "example": "https://res.cloudinary.com/dnfxykh8j/image/upload/v1730411910/wf6g1bi1qvd7spmurqi3.png"
          },
          "email": {
            "description": "User's email",
            "type": "string",
            "example": "mail@example.com"
          },
          "theme": {
            "description": "site theme type (dark, light, violet)",
            "type": "string",
            "enum": [
              "dark",
              "light",
              "violet"
            ],
            "default": "light",
            "example": "light"
          },
          "createdAt": {
            "description": "date of create",
            "type": "string",
            "example": "2024-10-12T05:46:48.395Z"
          },
          "updatedAt": {
            "description": "date of last update",
            "type": "string",
            "example": "2024-10-12T05:47:41.792Z"
          }
        }
      }
    },
    "responses": {
      "401": {
        "description": "UnauthorizedError",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid password"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "User not found"
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Email in use",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "ConflictError"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "Email in use"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}