tags:
  - auth
summary: Create User
operationId: createUser
description: 'Create a user with payload'
security:
  - bearerAuth: []
requestBody:
  content:
    application/json:
      schema:
        type: object
        required:
          - name
          - email
          - password
        properties:
          name:
            description: User's name
            type: string
            example: 'John Doe'
          email:
            description: "User's email"
            type: string
            example: example@mail.com
          password:
            description: User's password, must have uppercase and lowercase letters, as well as special characters
            type: string
            minLength: 8
            maxLength: 20
            pattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*(),.?\":{}|<>]).+$
            example: 'Qweas23!'

responses:
  '201':
    description: Creates a user
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
            - data
          properties:
            status:
              type: integer
              example: 201
            message:
              type: string
              example: Successfully registered a user!
            data:
              type: object
              $ref: '../../components/schemas/user.yaml'
            token:
              type: object
              properties:
                accessToken:
                  type: string
                  example: gocx91Da6+mfdrgJlCn5qQ==
  '409':
    $ref: '../../components/responses/409.yaml'
